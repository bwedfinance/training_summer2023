---
title: "Data cleaning and processing in R"
date: "June 27, 2023"
format:
  revealjs:
    chalkboard: true
execute:
  freeze: auto
  echo: false
---

# Homework Review

## Solving a common problem with the homework

# Principles of tidy data

## Cleaning your data: One of the most important and under-appreciated stages of good data analysis

Education finance data, like all other data, rarely come to us in a format that is plug-and-play ready for analysis

A high-quality analysis of your state's school finance system must start with gathering and cleaning relevant data.

**"Tidy datasets are all alike, but every messy dataset is messy in its own way." - Hadley Wickham**

## The principles of "tidy data" provide a helpful vision of what good, clean data should look like.

Tidy data follows three rules:

1.  Each column is a variable
2.  Each row is an observation
3.  Each cell is a value

![Source: R for Data Science](https://d33wubrfki0l68.cloudfront.net/6f1ddb544fc5c69a2478e444ab8112fb0eea23f8/08547/images/r4ds/tidy-1.png)

## If your data includes a variable that is embedded across several column names, use **pivot_longer()**

![Source: R for Data Science](https://epirhandbook.com/en/images/pivoting/pivot_longer_new.png)

## In-class coding example: How to use **pivot_longer()**

## If your data includes data from a single observation spread across multiple rows, use **pivot_wider()**

![Source: R for Data Science](https://bcheggeseth.github.io/112_fall_2022/images/pivot_wider.png)

## In-class coding example: How to use **pivot_wider()**

# Techniques to clean messy data

## Cleaning data can be challenging, but it's easier if you take a systematic approach to every raw data file

+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Step Number                   | Goal                                                                                                                                                                   |
+===============================+========================================================================================================================================================================+
| 1.  Data import               | Ensure your import function is set up to read the data properly                                                                                                        |
+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 2.  Column names              | Reformat or manually create column names that are:                                                                                                                     |
|                               |                                                                                                                                                                        |
|                               | -   lowercase                                                                                                                                                          |
|                               |                                                                                                                                                                        |
|                               | -   use underscores instead of spaces                                                                                                                                  |
|                               |                                                                                                                                                                        |
|                               | -   do not begin with a number                                                                                                                                         |
|                               |                                                                                                                                                                        |
|                               | -   follow a consistent format                                                                                                                                         |
|                               |                                                                                                                                                                        |
|                               |     -   Ex. rev_local_fy18 and rev_state_fy18                                                                                                                          |
+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 3.  Mis-formatted data        | Work with functions from base R like 'as.numeric()' or from the 'tidyverse' packages like 'stringr' to clean the data that appear in a different format than you want. |
+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 4.  Missing data and outliers | Identify where in your dataset there are missing variables and/or outliers - this may be more of an iterative process as your explore your data.                       |
+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

## In-class coding example: minnesota_clean.R

# Joining datasets

## Your data will rarely come to you in a single table. You will need to join functions to merge dataframes together

To join two dataframes, they need to share a common column with a unique identifier.

State departments of education typically assign a unique ID number to each school district. **Make sure this is available in your datasets.**

Joining datasets on a name (e.g. school or district) can create problems based on:

-   Capitalization (Mcgregor v. McGregor)
-   Abbreviation (St. Paul v. Saint Paul)
-   Mis-spelling (it happens!)

## There are different ways to join datasets together, but using **left_join()** will keep your work consistent

::: columns
::: {.column width="50%"}
::: {.column width="50%"}
Once you have dataframes that share a common ID column, start with your most reliable set of data (typically student count data like ADM or enrollment) and use **left_join()** to attach additional data to that table.

This will keep the number of rows (e.g. districts or schools) consistent as you use **left_join()** to add more data.
:::
:::

::: {.column width="50%"}
![Source: R for Data Science](https://r4ds.had.co.nz/diagrams/join-outer.png)
:::
:::

## In-class coding example: How to use **left_join()**

## As you use **left_join()** to merge dataframes together, it's helpful to use anti-join to examine missing data.

Using the **anti_join()** function from the [dplyr](https://dplyr.tidyverse.org/index.html) package in R returns all rows in one data frame that do not have matching values in another data frame. Using anti_join() allows you to explore the incongruities in your data.

![Source: R for Data Science](https://d33wubrfki0l68.cloudfront.net/f29a85efd53a079cc84c14ba4ba6894e238c3759/c1408/diagrams/join-anti.png)

## In-class coding example: How to use **anti_join()**

# Break

# An example with **tidycensus**

## The **'tidycensus'** package can provide data at the school district level that may be helpful for school finance analysis

::: columns
::: {.column width="50%"}
The Census Bureau collects a lot of information that is reported at the school district level. This includes information on topics that are relevant to school finance, like housing.

The **'tidycensus'** R package makes it easy to access, explore, and analyze Census Bureau data.
:::

::: {.column width="50%"}
:::
:::

# In-class exercise

# Homework assignment
